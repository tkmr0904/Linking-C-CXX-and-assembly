./b.out: ./a.o ./b.o ./c.o		
	g++           $^ -o $@		&&	echo 'a.oとb.oとc.oからb.outを作成終了'

./a.o  : ../Source/a.c	#ソースコードだけ別フォルダ
	gcc   -c      $^ -o $@		&&	echo 'a.cからa.oを作成終了'

./b.o  : ../Source/b.asm	#ソースコードだけ別フォルダ
	nasm -f elf64 $^ -o $@		&&	echo 'b.asmからb.oを作成終了'

./c.o  : ../Source/c.cpp	#ソースコードだけ別フォルダ
	g++   -c      $^ -o $@		&&	echo 'c.cppからc.oを作成終了'


#(左のファイル):(右のファイル)は  $@:$^  に対応する

################################################################################################################
################################################################################################################

clean:
	rm ./*.o			&&	echo '.oのファイルをすべてゴミ箱に移動終了'

.PHONY : clean  #cleanをファイル名ではなく関数名と見なす


run:
	make ./b.out; ./b.out     	#実行をする(実行ファイルが最新でなければ作成し直す)

.PHONY : run   				#runをファイル名ではなく関数名と見なす


src_only:
	rm ./*.o b.out			&&  echo 'ファイルをすべてゴミ箱に移動終了'

.PHONY : src_only   		#runをファイル名ではなく関数名と見なす
